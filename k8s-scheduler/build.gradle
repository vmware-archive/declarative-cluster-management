/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'nu.studer.jooq' version "${jooqPluginVersion}"
    id "com.gorylenko.gradle-git-properties" version "${gitPropertiesVersion}"
}


apply plugin: 'java'
apply plugin: 'nu.studer.jooq'
apply plugin: "application"

dependencies {
    implementation project(':dcm')
    implementation "com.zaxxer:HikariCP:${hikariCPVersion}"
    implementation "io.fabric8:kubernetes-client:${fabricK8sClientVersion}"
    implementation "io.fabric8:kubernetes-server-mock:${fabricK8sClientVersion}"
    implementation "io.dropwizard.metrics:metrics-core:${metricsVersion}"
    implementation "commons-cli:commons-cli:${commonsCliVersion}"
    implementation "commons-io:commons-io:${commonsIoVersion}"
    implementation "com.h2database:h2:${h2Version}"
    jooqRuntime "org.jooq:jooq-meta-extensions:${jooqVersion}"
}

gitProperties {
    gitPropertiesName = "git.properties"
}

jooq {
 generateSchemaSourceOnCompilation = true
 sample(sourceSets.main) {
  generator {
   database {
     name = "org.jooq.meta.extensions.ddl.DDLDatabase"
     properties {
        property {
         key = 'scripts'
         value = 'src/main/resources/scheduler_tables.sql'
       }
     }
   }
   target {
      packageName = 'com.vmware.dcm.k8s.generated'
      directory = 'build/generated-sources/jooq'
   }
  } 
 }
}

def test = tasks.named("test") {
    useJUnitPlatform {
        excludeTags "integration-test"
    }
}

def integrationTest = tasks.register("integrationTest2", Test) {
    useJUnitPlatform {
        includeTags "integration-test"
    }
    shouldRunAfter test
}


application {
    mainClass = 'Scheduler'
}

task(runBenchmark, dependsOn: 'classes', type: JavaExec) {
   main = 'EmulatedCluster'
   classpath = sourceSets.main.runtimeClasspath
}